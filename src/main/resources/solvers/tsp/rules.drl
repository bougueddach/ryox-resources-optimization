/*
 * Copyright 2011 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dialect "java"

import org.optaplanner.core.api.score.buildin.simplelong.SimpleLongScoreHolder;
import com.sillaps.intern.planner.problems.tsp.Place


global SimpleLongScoreHolder scoreHolder;

// ############################################################################
// Soft constraints
// ############################################################################

rule "distanceFromPreviousPoint"
    when
        $visit : Place(previousPoint != null)
    then
        scoreHolder.addConstraintMatch(kcontext, - $visit.getDistanceFromPreviousPoint());
end

rule "distanceFromLastToOrigin"
    when
        $visit : Place(previousPoint != null) not Place(previousPoint == $visit)
        $origin: Place(origin == true)
    then
        scoreHolder.addConstraintMatch(kcontext, - $visit.getDistanceTo($origin));
end
